<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Benchmark</name>
    </assembly>
    <members>
        <member name="T:Binarysharp.Benchmark.BenchShark">
            <summary>
            Class to evaluate the performance of functions.
            </summary>
        </member>
        <member name="F:Binarysharp.Benchmark.BenchShark.CleanUpInterval">
            <summary>
            The number of interval of iteration to perform a memory clean up.
            </summary>
        </member>
        <member name="F:Binarysharp.Benchmark.BenchShark.MustStoreIterations">
            <summary>
            Determines whether the evaluation must store the result of each iteration (does not alter the exposed properties).
            If this value is set to <c>true</c>, the evaluation can be memory consuming, depending on the number of iterations.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.#ctor(System.Boolean,System.UInt32)">
            <summary>
            Initializes a new instance of the class <see cref="T:Binarysharp.Benchmark.BenchShark"/>.
            </summary>
            <param name="mustStoreIterations">
            Determines whether the evaluation must store the result of each iteration (does not alter the exposed properties).
            If this value is set to <c>true</c>, the evaluation can be memory consuming, depending on the number of iterations.
            </param>
            <param name="cleanUpInterval">The number of interval of iteration to perform a memory clean up.</param>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.InternalEvaluateTask(System.Action)">
            <summary>
            Evaluates the performance of the task.
            </summary>
            <param name="task">The task to evaluate.</param>
            <returns>The return value is the result of the evaluation.</returns>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.OnEvaluationCompleted(Binarysharp.Benchmark.Internals.EvaluationResult)">
            <summary>
            Raises the event <see cref="E:Binarysharp.Benchmark.BenchShark.EvaluationCompleted"/>, stating that an evaluation was performed.
            </summary>
            <param name="taskEvaluated">The result of a task fully evaluated.</param>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.OnIterationCompleted(Binarysharp.Benchmark.Internals.IterationResult,Binarysharp.Benchmark.Internals.EvaluationResult)">
            <summary>
            Raises the event <see cref="E:Binarysharp.Benchmark.BenchShark.IterationCompleted"/>, stating that an iteration was performed.
            </summary>
            <param name="currentIteration">The current iteration of the evaluation.</param>
            <param name="currentEvaluation">The current running evaluation.</param>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.AddTask(System.String,System.Action)">
            <summary>
            Adds a new task to the evaluation list.
            </summary>
            <param name="name">The name of the task.</param>
            <param name="task">The task to evaluate.</param>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.ClearTasks">
            <summary>
            Remove all the stored tasks.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.EvaluateDecoratedTasks(System.Object,System.UInt32)">
            <summary>
            Evaluates the performance of the tasks decorated with the <see cref="T:Binarysharp.Benchmark.BenchSharkTaskAttribute"/> attribute within the given object.
            </summary>
            <param name="obj">The object where the tasks are retrieved.</param>
            <param name="iterations">The number of iterations to evaluate the tasks.</param>
            <returns>The return value is an array containing the result of the evaluations.</returns>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.EvaluateDecoratedTasks``1(System.UInt32)">
            <summary>
            Evaluates the performance of the tasks decorated with the <see cref="T:Binarysharp.Benchmark.BenchSharkTaskAttribute"/> attribute within the given type.
            </summary>
            <typeparam name="T">The type where the methods are retrieved.</typeparam>
            <param name="iterations">The number of iterations to evaluate the tasks.</param>
            <returns>The return value is an array containing the result of the evaluations.</returns>
            <remarks>Calling this method creates a new instance of the given type.</remarks>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.EvaluateStoredTasks(System.UInt32)">
            <summary>
            Evaluates the performance of all the tasks previously stored.
            </summary>
            <param name="iterations">The number of iterations to evaluate the tasks.</param>
            <returns>The return value is an array containing the result of the evaluations.</returns>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.EvaluateTask(System.String,System.Action,System.UInt32)">
            <summary>
            Evaluates the performance of the task.
            </summary>
            <param name="name">The name of the task.</param>
            <param name="task">The task to evaluate.</param>
            <param name="iterations">The number of iterations to evaluate the task.</param>
            <returns>The return value is the result of the evaluation.</returns>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchShark.EvaluateTask(System.Action,System.UInt32)">
            <summary>
            Evaluate the performance of the task.
            </summary>
            <param name="task">The task to evaluate.</param>
            <param name="iterations">The number of iterations to evaluate the task.</param>
            <returns>The return value is the result of the evaluation.</returns>
        </member>
        <member name="P:Binarysharp.Benchmark.BenchShark.Tasks">
            <summary>
            The tasks to evaluate.
            </summary>
        </member>
        <member name="E:Binarysharp.Benchmark.BenchShark.IterationCompleted">
            <summary>
            This event signals when an iteration for a task is completed.
            </summary>
        </member>
        <member name="E:Binarysharp.Benchmark.BenchShark.EvaluationCompleted">
            <summary>
            This event signals when an evaluation for a task is completed.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.BenchShark.EnableUnoptimizedEvaluations">
            <summary>
            Determines whether the object can run evaluations in debug mode.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.BenchSharkTaskAttribute">
            <summary>
            Represents an attribute that BenchMark can evaluate.
            This attribute can decorate instance and static methods.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.BenchSharkTaskAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Binarysharp.Benchmark.BenchSharkTaskAttribute"/> class.
            </summary>
            <param name="name">The name of the task.</param>
        </member>
        <member name="P:Binarysharp.Benchmark.BenchSharkTaskAttribute.Name">
            <summary>
            The name of the task to evaluate.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.Helpers.OptimizationHelper">
            <summary>
            Provides useful functioons related to optimize the process.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Helpers.OptimizationHelper.OptimizeMemory">
            <summary>
            Optimizes the memory of the current process, avoiding the Garbage Collector to be called afterwards.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Helpers.OptimizationHelper.IsBeingDebugged">
            <summary>
            Gets a value that indicates whether a debugger is attached to the process.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Helpers.OptimizationHelper.IsInDebugMode">
            <summary>
            Gets a value that indicates whether the project is compiled under the Debug mode.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Helpers.OptimizationHelper.IsOptimizedProcess">
            <summary>
            Gets a value that indicates whether the process is optimized.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.Internals.BenchSharkIterationEventArgs">
            <summary>
            Represents an event argument when an iteration is completed.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.BenchSharkIterationEventArgs.#ctor(Binarysharp.Benchmark.Internals.IterationResult,Binarysharp.Benchmark.Internals.EvaluationResult)">
            <summary>
            Initializes a new instance of the class <see cref="T:Binarysharp.Benchmark.Internals.BenchSharkIterationEventArgs"/>.
            </summary>
            <param name="currentIteration">The current iteration of the evaluation.</param>
            <param name="currentEvaluation">The current running evaluation.</param>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.BenchSharkIterationEventArgs.CurrentIteration">
            <summary>
            The result of the current iteration of the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.BenchSharkIterationEventArgs.CurrentEvaluation">
            <summary>
            The result of the current running evaluation.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.Internals.BenchSharkEvaluationEventArgs">
            <summary>
            Represents an event argument when a evaluation is completed.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.BenchSharkEvaluationEventArgs.#ctor(Binarysharp.Benchmark.Internals.EvaluationResult)">
            <summary>
            Initializes a new instance of the class <see cref="T:Binarysharp.Benchmark.Internals.BenchSharkEvaluationEventArgs"/>.
            </summary>
            <param name="taskEvaluated">The result of a task fully evaluated.</param>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.BenchSharkEvaluationEventArgs.TaskEvaluated">
            <summary>
            The result of a task fully evaluated.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.Internals.EvaluationResult">
            <summary>
            The result of an evaluation completed by BenchShark.
            </summary>
        </member>
        <member name="F:Binarysharp.Benchmark.Internals.EvaluationResult.InternalIterations">
            <summary>
            The collection containing the iterations.
            This field is only filled when the value <see cref="F:Binarysharp.Benchmark.Internals.EvaluationResult.MustStoreIterations"/> is set to <c>true</c>.
            </summary>
        </member>
        <member name="F:Binarysharp.Benchmark.Internals.EvaluationResult.MustStoreIterations">
            <summary>
            Determines whether the result must store all the iterations.
            If this value is set to <c>true</c>, the evaluation can be memory consuming, depending on the number of iterations.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.EvaluationResult.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Binarysharp.Benchmark.Internals.EvaluationResult"/> class.
            </summary>
            <param name="name">The name of the evaluation.</param>
            <param name="mustStoreIterations">
            Determines whether the evaluation must store the result of each iteration (does not alter the exposed properties).
            If this value is set to <c>true</c>, the evaluation can be memory consuming, depending on the number of iterations.
            </param>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.EvaluationResult.AddIteration(Binarysharp.Benchmark.Internals.IterationResult)">
            <summary>
            Adds the iteration to the evaluation result.
            </summary>
            <param name="iteration">The iteration to add.</param>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.AverageElapsedTicks">
            <summary>
            The average of all the elapsed ticks for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.AverageExecutionTime">
            <summary>
            The average of all the execution time for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.BestElapsedTicks">
            <summary>
            The best elapsed ticks for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.BestExecutionTime">
            <summary>
            The best execution time for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.Iterations">
            <summary>
            The collection containing the iterations.
            This property can only be queried when the value <see cref="F:Binarysharp.Benchmark.Internals.EvaluationResult.MustStoreIterations"/> is set to <c>true</c>.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.IterationsCount">
            <summary>
            The number of iterations for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.Name">
            <summary>
            The name of the task.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.TotalElapsedTicks">
            <summary>
            The total of all the elapsed ticks for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.TotalExecutionTime">
            <summary>
            The total of all the execution time for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.WorstElapsedTicks">
            <summary>
            The worst elapsed ticks for the evaluation.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResult.WorstExecutionTime">
            <summary>
            The worst execution time for the evaluation.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.Internals.EvaluationResultCollection">
            <summary>
            Provides a strongly typed collection of <see cref="T:Binarysharp.Benchmark.Internals.EvaluationResult"/> objects.
            </summary>
        </member>
        <member name="F:Binarysharp.Benchmark.Internals.EvaluationResultCollection.EvaluationsList">
            <summary>
            The collection containing the evaluations.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.EvaluationResultCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Binarysharp.Benchmark.Internals.EvaluationResultCollection"/> class.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.EvaluationResultCollection.AddEvaluationResult(Binarysharp.Benchmark.Internals.EvaluationResult)">
            <summary>
            Adds the result of an evaluation to the collection.
            </summary>
            <param name="result">The result of an evaluation.</param>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResultCollection.FastestEvaluations">
            <summary>
            The results of the completed evaluations ordered by the fastest speed of execution.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResultCollection.Evaluations">
            <summary>
            The results of the completed evaluations.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.EvaluationResultCollection.SlowestEvaluations">
            <summary>
            The results of the completed evaluations ordered by the slowest speed of execution.
            </summary>
        </member>
        <member name="T:Binarysharp.Benchmark.Internals.IterationResult">
            <summary>
            The result of an iteration completed by BenchShark.
            </summary>
        </member>
        <member name="M:Binarysharp.Benchmark.Internals.IterationResult.#ctor(System.TimeSpan,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Binarysharp.Benchmark.Internals.IterationResult"/> class.
            </summary>
            <param name="executionTime">The execution time for the iteration.</param>
            <param name="elapsedTicks">The elapsed ticks for the iteration.</param>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.IterationResult.ExecutionTime">
            <summary>
            The execution time for the iteration.
            </summary>
        </member>
        <member name="P:Binarysharp.Benchmark.Internals.IterationResult.ElapsedTicks">
            <summary>
            The elapsed ticks for the iteration.
            </summary>
        </member>
    </members>
</doc>
